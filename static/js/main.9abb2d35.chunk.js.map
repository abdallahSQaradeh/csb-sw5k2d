{"version":3,"sources":["index.js"],"names":["App","props","_this","Object","_tmp_deploys_sw5k2d_ckzubfan00fz10us8024ba5hy_source_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","state","data","id","name","expanded","parent","toggleCollapsible","_ref","event","index","rowData","setState","prevState","find","x","_table","current","recomputeRowHeights","forceUpdateGrid","_visibleItems","filter","item","React","createRef","bind","_tmp_deploys_sw5k2d_ckzubfan00fz10us8024ba5hy_source_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","react_virtualized__WEBPACK_IMPORTED_MODULE_8__","_ref2","height","width","headerHeight","length","ref","rowCount","rowGetter","_ref3","rowHeight","onRowClick","label","dataKey","Component","ReactDOM","render","document","getElementById"],"mappings":"irBAKMA,0CAYJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAI,EAAAC,KAAAF,KAAMJ,IAZRO,MAAQ,CACNC,KAAM,CACJ,CAAEC,GAAI,KAAMC,KAAM,SAAUC,UAAU,GACtC,CAAEC,OAAQ,KAAMF,KAAM,UACtB,CAAEE,OAAQ,KAAMF,KAAM,UACtB,CAAED,GAAI,KAAMC,KAAM,SAAUC,UAAU,GACtC,CAAEC,OAAQ,KAAMF,KAAM,UACtB,CAAEE,OAAQ,KAAMF,KAAM,YAIPT,EAOnBY,kBAAoB,SAAAC,GAA+BA,EAA5BC,MAA4B,IAArBC,EAAqBF,EAArBE,MAAOC,EAAcH,EAAdG,QAC9BA,EAAQL,QACXX,EAAKiB,SACH,SAAAC,GAIE,OAHAA,EAAUX,KAAKY,KACb,SAAAC,GAAC,OAAIA,EAAEZ,KAAOQ,EAAQR,KACtBE,UAAYQ,EAAUX,KAAKY,KAAK,SAAAC,GAAC,OAAIA,EAAEZ,KAAOQ,EAAQR,KAAIE,SACrDQ,GAET,WACElB,EAAKqB,OAAOC,QAAQC,oBAAoBR,GACxCf,EAAKqB,OAAOC,QAAQE,qBAlBTxB,EAwBnByB,cAAgB,WAOd,OAAOzB,EAAKM,MAAMC,KAAKmB,OANR,SAAAC,GACb,OAAKA,EAAKhB,QAGHX,EAAKM,MAAMC,KAAKY,KAAK,SAAAC,GAAC,OAAIA,EAAEZ,KAAOmB,EAAKhB,SAAQD,YA3BzDV,EAAKqB,OAASO,IAAMC,YACpB7B,EAAKyB,cAAgBzB,EAAKyB,cAAcK,KAAnB7B,OAAA8B,EAAA,EAAA9B,CAAAD,IACrBA,EAAKY,kBAAoBZ,EAAKY,kBAAkBkB,KAAvB7B,OAAA8B,EAAA,EAAA9B,CAAAD,IAJRA,4CAkCnB,WAAS,IAAAgC,EAAA7B,KACUA,KAAKG,MAAdC,KACR,OACE0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACG,SAAAC,KAAGC,OAAH,IAAWC,EAAXF,EAAWE,MAAX,OACCN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEI,aAAc,GACdF,OAAQ,GAAmC,GAA9BN,EAAKP,gBAAgBgB,OAClCC,IAAKV,EAAKX,OACVsB,SAAUX,EAAKP,gBAAgBgB,OAC/BG,UAAW,SAAAC,GAAA,IAAG9B,EAAH8B,EAAG9B,MAAH,OAAeiB,EAAKP,gBAAgBV,IAC/C+B,UAAW,GACXP,MAAO,IACPQ,WAAYf,EAAKpB,mBAEjBqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQY,MAAK,KAAQC,QAAO,KAAQV,MAAOA,EAAQ,IACnDN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQY,MAAK,SAAYC,QAAO,SAAYV,MAAOA,EAAQ,IAC3DN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQY,MAAK,OAAUC,QAAO,OAAUV,MAAOA,EAAQ,cA/DjDX,IAAMsB,WAuExBC,IAASC,OAAOnB,EAAAC,EAAAC,cAACrC,EAAD,MAASuD,SAASC,eAAe","file":"static/js/main.9abb2d35.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AutoSizer, Table, Column } from \"react-virtualized\";\nimport \"react-virtualized/styles.css\";\n\nclass App extends React.Component {\n  state = {\n    data: [\n      { id: \"01\", name: \"Name 1\", expanded: true },\n      { parent: \"01\", name: \"Name 2\" },\n      { parent: \"01\", name: \"Name 3\" },\n      { id: \"02\", name: \"Name 1\", expanded: false },\n      { parent: \"02\", name: \"Name 2\" },\n      { parent: \"02\", name: \"Name 2\" }\n    ]\n  };\n\n  constructor(props) {\n    super(props);\n    this._table = React.createRef();\n    this._visibleItems = this._visibleItems.bind(this);\n    this.toggleCollapsible = this.toggleCollapsible.bind(this);\n  }\n\n  toggleCollapsible = ({ event, index, rowData }) => {\n    if (!rowData.parent) {\n      this.setState(\n        prevState => {\n          prevState.data.find(\n            x => x.id === rowData.id\n          ).expanded = !prevState.data.find(x => x.id === rowData.id).expanded;\n          return prevState;\n        },\n        () => {\n          this._table.current.recomputeRowHeights(index); // Clear cached size\n          this._table.current.forceUpdateGrid(); // Rerender list with new size\n        }\n      );\n    }\n  };\n\n  _visibleItems = () => {\n    var isVisibe = item => {\n      if (!item.parent) {\n        return true;\n      }\n      return this.state.data.find(x => x.id === item.parent).expanded;\n    };\n    return this.state.data.filter(isVisibe);\n  };\n\n  render() {\n    const { data } = this.state;\n    return (\n      <AutoSizer>\n        {({ height, width }) => (\n          <Table\n            headerHeight={40}\n            height={40 + this._visibleItems().length * 40}\n            ref={this._table}\n            rowCount={this._visibleItems().length}\n            rowGetter={({ index }) => this._visibleItems()[index]}\n            rowHeight={40}\n            width={500}\n            onRowClick={this.toggleCollapsible}\n          >\n            <Column label={`ID`} dataKey={`id`} width={width / 5} />\n            <Column label={`Parent`} dataKey={`parent`} width={width / 5} />\n            <Column label={`Name`} dataKey={`name`} width={width / 5} />\n          </Table>\n        )}\n      </AutoSizer>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}